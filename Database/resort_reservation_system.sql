-- MySQL Script generated by MySQL Workbench
-- 12/13/16 20:27:15
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema resort_reservation_system
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema resort_reservation_system
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `resort_reservation_system` DEFAULT CHARACTER SET utf8 ;
USE `resort_reservation_system` ;

-- -----------------------------------------------------
-- Table `resort_reservation_system`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `resort_reservation_system`.`customer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `last_name` VARCHAR(20) NULL,
  `first_name` VARCHAR(20) NULL,
  `middle_name` VARCHAR(20) NULL,
  `contact_number` VARCHAR(15) NULL,
  `address` VARCHAR(50) NULL,
  `email` VARCHAR(50) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `resort_reservation_system`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `resort_reservation_system`.`employee` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `last_name` VARCHAR(20) NULL,
  `first_name` VARCHAR(20) NULL,
  `middle_name` VARCHAR(20) NULL,
  `contact_number` VARCHAR(15) NULL,
  `address` VARCHAR(50) NULL,
  `email` VARCHAR(50) NULL,
  `hired_date` DATE NULL,
  `rate` VARCHAR(20) NULL,
  `type` VARCHAR(45) NULL,
  `department` VARCHAR(50) NULL,
  `position` VARCHAR(50) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `resort_reservation_system`.`billingstatement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `resort_reservation_system`.`billingstatement` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mode_of_payment` VARCHAR(20) NULL,
  `amount` DECIMAL(2) NULL,
  `date_of_payment` DATE NULL,
  `status` VARCHAR(45) NULL,
  `employee_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_billing statement_employee1_idx` (`employee_id` ASC),
  INDEX `fk_billing statement_customer1_idx` (`customer_id` ASC),
  CONSTRAINT `fk_billing statement_employee1`
    FOREIGN KEY (`employee_id`)
    REFERENCES `resort_reservation_system`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_billing statement_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `resort_reservation_system`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `resort_reservation_system`.`room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `resort_reservation_system`.`room` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NULL,
  `rate` VARCHAR(20) NULL,
  `capacity` INT NULL,
  `availability` VARCHAR(45) NULL,
  `billing statement_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_room_billing statement1_idx` (`billing statement_id` ASC),
  CONSTRAINT `fk_room_billing statement1`
    FOREIGN KEY (`billing statement_id`)
    REFERENCES `resort_reservation_system`.`billingstatement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `resort_reservation_system`.`reservation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `resort_reservation_system`.`reservation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `check_in` DATE NULL,
  `check_out` DATE NULL,
  `type_of_room` VARCHAR(45) NULL,
  `adults` VARCHAR(50) NULL,
  `kids` VARCHAR(50) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `resort_reservation_system`.`service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `resort_reservation_system`.`service` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NULL,
  `cost` VARCHAR(45) NULL,
  `employee_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `billing statement_id` INT NOT NULL,
  `room_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_service_employee1_idx` (`employee_id` ASC),
  INDEX `fk_service_customer1_idx` (`customer_id` ASC),
  INDEX `fk_service_billing statement1_idx` (`billing statement_id` ASC),
  INDEX `fk_service_room1_idx` (`room_id` ASC),
  CONSTRAINT `fk_service_employee1`
    FOREIGN KEY (`employee_id`)
    REFERENCES `resort_reservation_system`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_service_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `resort_reservation_system`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_service_billing statement1`
    FOREIGN KEY (`billing statement_id`)
    REFERENCES `resort_reservation_system`.`billingstatement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_service_room1`
    FOREIGN KEY (`room_id`)
    REFERENCES `resort_reservation_system`.`room` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `resort_reservation_system`.`customer_has_reservation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `resort_reservation_system`.`customer_has_reservation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date_of_arrival` DATE NULL,
  `date_of_departure` DATE NULL,
  `desired_room_type` VARCHAR(20) NULL,
  `requests` VARCHAR(50) NULL,
  `reservation_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_customer_has_reservation_reservation1_idx` (`reservation_id` ASC),
  INDEX `fk_customer_has_reservation_customer1_idx` (`customer_id` ASC),
  CONSTRAINT `fk_customer_has_reservation_reservation1`
    FOREIGN KEY (`reservation_id`)
    REFERENCES `resort_reservation_system`.`reservation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_has_reservation_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `resort_reservation_system`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `resort_reservation_system`.`reservation_has_room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `resort_reservation_system`.`reservation_has_room` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `reservation_start_date` DATE NULL,
  `reservation_end_date` DATE NULL,
  `reservation_id` INT NOT NULL,
  `room_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reservation_has_room_reservation1_idx` (`reservation_id` ASC),
  INDEX `fk_reservation_has_room_room1_idx` (`room_id` ASC),
  CONSTRAINT `fk_reservation_has_room_reservation1`
    FOREIGN KEY (`reservation_id`)
    REFERENCES `resort_reservation_system`.`reservation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reservation_has_room_room1`
    FOREIGN KEY (`room_id`)
    REFERENCES `resort_reservation_system`.`room` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `resort_reservation_system`.`employee_assist_customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `resort_reservation_system`.`employee_assist_customer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `customer_id` INT NOT NULL,
  `employee_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_employee_assist_customer_customer1_idx` (`customer_id` ASC),
  INDEX `fk_employee_assist_customer_employee1_idx` (`employee_id` ASC),
  CONSTRAINT `fk_employee_assist_customer_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `resort_reservation_system`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_employee_assist_customer_employee1`
    FOREIGN KEY (`employee_id`)
    REFERENCES `resort_reservation_system`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
